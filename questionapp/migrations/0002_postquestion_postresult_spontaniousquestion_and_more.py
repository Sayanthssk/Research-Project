# Generated by Django 4.2.23 on 2025-07-04 15:56

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('questionapp', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PostQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(help_text='This is the correct answer / category.', max_length=100)),
                ('option1', models.CharField(blank=True, help_text='Wrong option 1', max_length=100, null=True)),
                ('option2', models.CharField(blank=True, help_text='Wrong option 2', max_length=100, null=True)),
                ('option3', models.CharField(blank=True, help_text='Wrong option 3', max_length=100, null=True)),
                ('option4', models.CharField(blank=True, help_text='Wrong option 3', max_length=100, null=True)),
                ('option5', models.CharField(blank=True, help_text='Wrong option 3', max_length=100, null=True)),
                ('option6', models.CharField(blank=True, default='Neutral', help_text='Wrong option 4', max_length=100, null=True)),
                ('image', models.ImageField(help_text='Upload image for the question.', upload_to='Post_question_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PostResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_time', models.FloatField(blank=True, null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('QUESTIONID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='questionapp.postquestion')),
                ('USERID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='questionapp.user_model')),
            ],
        ),
        migrations.CreateModel(
            name='SpontaniousQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(help_text='This is the correct answer / category.', max_length=100)),
                ('option1', models.CharField(blank=True, help_text='Wrong option 1', max_length=100, null=True)),
                ('option2', models.CharField(blank=True, help_text='Wrong option 2', max_length=100, null=True)),
                ('option3', models.CharField(blank=True, help_text='Wrong option 3', max_length=100, null=True)),
                ('option4', models.CharField(blank=True, default='Neutral', help_text='Wrong option 4', max_length=100, null=True)),
                ('image', models.ImageField(help_text='Upload image for the question.', upload_to='Spontanious_question_images/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='SpontaniousResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('response_time', models.FloatField(blank=True, null=True)),
                ('is_correct', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('QUESTIONID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='questionapp.spontaniousquestion')),
                ('USERID', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='questionapp.user_model')),
            ],
        ),
        migrations.DeleteModel(
            name='Question',
        ),
    ]
